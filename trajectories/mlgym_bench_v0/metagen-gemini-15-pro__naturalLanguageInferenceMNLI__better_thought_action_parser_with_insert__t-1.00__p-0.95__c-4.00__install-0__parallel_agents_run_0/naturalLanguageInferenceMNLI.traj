{
  "environment": "mlgym_main",
  "trajectory": [
    {
      "action": "ls -l\n",
      "observation": "total 12\n-rw-rw-r-- 1 agent mlgym 4308 Jan 29 02:29 baseline.py\n-r-xr-xr-x 1 agent mlgym 2247 Jan 29 03:10 evaluate.py*",
      "response": "DISCUSSION\nLet's start by listing the files in the current directory to understand the baseline setup.\n```\nls -l\n```\n",
      "state": "{\"open_file\": \"n/a\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nLet's start by listing the files in the current directory to understand the baseline setup.\n",
      "execution_time": 0.30178476800210774
    },
    {
      "action": "open baseline.py\n",
      "observation": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 1\n13:LEARNING_RATE = 1e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased', \n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()",
      "response": "DISCUSSION\nNow let's open the baseline file to inspect its contents.\n```\nopen baseline.py\n```\n",
      "state": "{\"open_file\": \"n/a\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nNow let's open the baseline file to inspect its contents.\n",
      "execution_time": 0.4052645590272732
    },
    {
      "action": "edit 12:12\nEPOCHS = 3\nend_of_edit\n",
      "observation": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 3\n13:LEARNING_RATE = 1e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased', \n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.",
      "response": "DISCUSSION\nThe baseline trains for only one epoch which is probably not enough to get optimal performance.  Let's increase the number of epochs to 3.\n\n```\nedit 12:12\nEPOCHS = 3\nend_of_edit\n```\n\n",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nThe baseline trains for only one epoch which is probably not enough to get optimal performance.  Let's increase the number of epochs to 3.\n\n",
      "execution_time": 0.6832138129975647
    },
    {
      "action": "python baseline.py\n",
      "observation": "\rEpoch 3/3:  55%|\u2588\u2588\u2588\u2588\u2588\u258d    | 6733/12272 [08:26<06:42, 13.75it/s]\rEpoch 3/3:  55%|\u2588\u2588\u2588\u2588\u2588\u258d    | 6735/12272 [08:27<06:43, 13.73it/s]\rEpoch 3/3:  55%|\u2588\u2588\u2588\u2588\u2588\u258d    | 6737/12272 [08:27<06:35, 13.98it/s]Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\n/bin/bash: line 221:   260 Killed                  python baseline.py\n///PROCESS-DONE:137:PROCESS-DONE///\n\nEXECUTION TIMED OUT BECAUSE THE COMMAND WAS RUNNING FOR MORE THAN 2400 SECONDS.",
      "response": "DISCUSSION\nNow let's run the training script.\n```\npython baseline.py\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nNow let's run the training script.\n",
      "execution_time": 2406.146865201008
    },
    {
      "action": "edit 12:12\nEPOCHS = 2\nend_of_edit\n\n",
      "observation": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 2\n13:LEARNING_RATE = 1e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased', \n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.",
      "response": "DISCUSSION\nThe training timed out, likely because 3 epochs took too long.  Let's reduce the number of epochs back down to 2 and try again.\n```\nedit 12:12\nEPOCHS = 2\nend_of_edit\n\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nThe training timed out, likely because 3 epochs took too long.  Let's reduce the number of epochs back down to 2 and try again.\n",
      "execution_time": 0.8156699689570814
    },
    {
      "action": "python baseline.py\n",
      "observation": "Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\nRepo card metadata block was not found. Setting CardData to empty.\nRepo card metadata block was not found. Setting CardData to empty.\n/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n  warnings.warn(\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 1:\nAverage Training Loss: 1.0751\nAverage Validation Loss: 1.0030\nValidation Accuracy: 52.29%\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 2:\nAverage Training Loss: 0.9579\nAverage Validation Loss: 0.8976\nValidation Accuracy: 59.34%",
      "response": "DISCUSSION\nNow let's run the updated training script.\n```\npython baseline.py\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nNow let's run the updated training script.\n",
      "execution_time": 1504.9316407139995
    },
    {
      "action": "validate\n",
      "observation": "Your code produced a valid submission artefact at .\nBaseline Score: {'validation_accuracy': 52.51146204788589}\nEvaluation Score: {'validation_accuracy': 59.33774834437086}",
      "response": "DISCUSSION\nTraining completed successfully. Now, let's validate the model's performance using the `validate` command.\n```\nvalidate\n```\n",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nTraining completed successfully. Now, let's validate the model's performance using the `validate` command.\n",
      "execution_time": 31.294595431012567
    },
    {
      "action": "edit 13:13\nLEARNING_RATE = 2e-7\nend_of_edit\n",
      "observation": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 2\n13:LEARNING_RATE = 2e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased', \n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.",
      "response": "DISCUSSION\nThe validation accuracy is 59.34%, which is a good improvement over the baseline of 52.51%.  Let's try increasing the learning rate and see if we can do better.\n```\nedit 13:13\nLEARNING_RATE = 2e-7\nend_of_edit\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nThe validation accuracy is 59.34%, which is a good improvement over the baseline of 52.51%.  Let's try increasing the learning rate and see if we can do better.\n",
      "execution_time": 0.9051169900340028
    },
    {
      "action": "python baseline.py\n",
      "observation": "Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\nRepo card metadata block was not found. Setting CardData to empty.\nRepo card metadata block was not found. Setting CardData to empty.\n/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n  warnings.warn(\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 1:\nAverage Training Loss: 1.0232\nAverage Validation Loss: 0.8957\nValidation Accuracy: 59.59%\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 2:\nAverage Training Loss: 0.8542\nAverage Validation Loss: 0.7866\nValidation Accuracy: 65.19%",
      "response": "DISCUSSION\nNow let's run the training script again with the updated learning rate.\n```\npython baseline.py\n```\n\n",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nNow let's run the training script again with the updated learning rate.\n",
      "execution_time": 1515.3745839520125
    },
    {
      "action": "validate\n",
      "observation": "Your code produced a valid submission artefact at .\nBaseline Score: {'validation_accuracy': 52.51146204788589}\nEvaluation Score: {'validation_accuracy': 65.18593988792664}",
      "response": "DISCUSSION\nTraining completed. Let's validate the updated model.\n```\nvalidate\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nTraining completed. Let's validate the updated model.\n",
      "execution_time": 26.067766521009617
    },
    {
      "action": "edit 51:51\n        'bert-base-cased',\nend_of_edit\n",
      "observation": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 2\n13:LEARNING_RATE = 2e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-cased',\n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.",
      "response": "DISCUSSION\nThe validation accuracy increased to 65.19%. This is a significant improvement. Let's try to further improve the performance by using a different pre-trained model, 'bert-base-cased'.\n```\nedit 51:51\n        'bert-base-cased',\nend_of_edit\n```\n",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nThe validation accuracy increased to 65.19%. This is a significant improvement. Let's try to further improve the performance by using a different pre-trained model, 'bert-base-cased'.\n",
      "execution_time": 0.830039937980473
    },
    {
      "action": "edit 21:21\n        self.tokenizer = BertTokenizer.from_pretrained('bert-base-cased')\nend_of_edit\n",
      "observation": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 2\n13:LEARNING_RATE = 2e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-cased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-cased',\n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.",
      "response": "DISCUSSION\nWe also need to update the tokenizer to use the cased version.\n```\nedit 21:21\n        self.tokenizer = BertTokenizer.from_pretrained('bert-base-cased')\nend_of_edit\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nWe also need to update the tokenizer to use the cased version.\n",
      "execution_time": 0.8803638119716197
    },
    {
      "action": "python baseline.py\n",
      "observation": "Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-cased and are newly initialized: ['classifier.bias', 'classifier.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\nRepo card metadata block was not found. Setting CardData to empty.\nRepo card metadata block was not found. Setting CardData to empty.\n/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n  warnings.warn(\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 1:\nAverage Training Loss: 0.9940\nAverage Validation Loss: 0.8742\nValidation Accuracy: 61.11%\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 2:\nAverage Training Loss: 0.8400\nAverage Validation Loss: 0.7665\nValidation Accuracy: 67.21%",
      "response": "DISCUSSION\nNow let's run the training script with the `bert-base-cased` model and tokenizer.\n```\npython baseline.py\n```\n",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nNow let's run the training script with the `bert-base-cased` model and tokenizer.\n",
      "execution_time": 1597.8798557430273
    },
    {
      "action": "validate\n",
      "observation": "Failed to decode metrics from evaluation script. Output:\n---\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\nTraceback (most recent call last):\n  File \"/home/agent/workspace/evaluate.py\", line 73, in <module>\n    evaluate_model()\n  File \"/home/agent/workspace/evaluate.py\", line 64, in evaluate_model\n    outputs = model(input_ids=input_ids, attention_mask=attention_mask, labels=labels)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1736, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1747, in _call_impl\n    return forward_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/models/bert/modeling_bert.py\", line 1668, in forward\n    outputs = self.bert(\n              ^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1736, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1747, in _call_impl\n    return forward_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/models/bert/modeling_bert.py\", line 1078, in forward\n    embedding_output = self.embeddings(\n                       ^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1736, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1747, in _call_impl\n    return forward_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/models/bert/modeling_bert.py\", line 212, in forward\n    token_type_embeddings = self.token_type_embeddings(token_type_ids)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1736, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1747, in _call_impl\n    return forward_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/sparse.py\", line 190, in forward\n    return F.embedding(\n           ^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/functional.py\", line 2551, in embedding\n    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nRuntimeError: CUDA error: device-side assert triggered\nCUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1\nCompile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.\nE0131 00:04:13.020000 4224 site-packages/torch/distributed/elastic/multiprocessing/api.py:869] failed (exitcode: 1) local_rank: 0 (pid: 4290) of binary: /home/agent/miniconda3/envs/mlgym_generic/bin/python\nTraceback (most recent call last):\n  File \"/home/agent/miniconda3/envs/mlgym_generic/bin/torchrun\", line 8, in <module>\n    sys.exit(main())\n             ^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py\", line 355, in wrapper\n    return f(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/distributed/run.py\", line 919, in main\n    run(args)\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/distributed/run.py\", line 910, in run\n    elastic_launch(\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/distributed/launcher/api.py\", line 138, in __call__\n    return launch_agent(self._config, self._entrypoint, list(args))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/distributed/launcher/api.py\", line 269, in launch_agent\n    raise ChildFailedError(\ntorch.distributed.elastic.multiprocessing.errors.ChildFailedError: \n============================================================\n/home/agent/workspace/evaluate.py FAILED\n------------------------------------------------------------\nFailures:\n  <NO_OTHER_FAILURES>\n------------------------------------------------------------\nRoot Cause (first observed failure):\n[0]:\n  time      : 2025-01-31_00:04:13\n  host      : compute-node-0\n  rank      : 0 (local_rank: 0)\n  exitcode  : 1 (pid: 4290)\n  error_file: <N/A>\n  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html\n============================================================\n---\nPlease make sure the evaluation script prints the metrics in json format.",
      "response": "DISCUSSION\nTraining completed. Let's validate the model.\n```\nvalidate\n```\n\n",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nTraining completed. Let's validate the model.\n",
      "execution_time": 13.45030611200491
    },
    {
      "action": "edit 51:51\n        'bert-base-uncased',\nend_of_edit\n",
      "observation": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 2\n13:LEARNING_RATE = 2e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-cased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased',\n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.",
      "response": "DISCUSSION\nIt appears there was a runtime error during evaluation. The error message suggests an issue with indexing on the GPU. This could indicate a mismatch between the model and the expected input sizes, which might be related to using a different tokenizer. It's also possible that the evaluation script needs adjustments when using a different model like `bert-base-cased`, or that an error in the model itself is only being triggered within the context of the `evaluate` function. Let's revert back to the `bert-base-uncased` model and tokenizer and see if the evaluation runs correctly.\n```\nedit 51:51\n        'bert-base-uncased',\nend_of_edit\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nIt appears there was a runtime error during evaluation. The error message suggests an issue with indexing on the GPU. This could indicate a mismatch between the model and the expected input sizes, which might be related to using a different tokenizer. It's also possible that the evaluation script needs adjustments when using a different model like `bert-base-cased`, or that an error in the model itself is only being triggered within the context of the `evaluate` function. Let's revert back to the `bert-base-uncased` model and tokenizer and see if the evaluation runs correctly.\n",
      "execution_time": 0.6434875029954128
    },
    {
      "action": "edit 21:21\n        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\nend_of_edit\n",
      "observation": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 2\n13:LEARNING_RATE = 2e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased',\n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.",
      "response": "```\nedit 21:21\n        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\nend_of_edit\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "",
      "execution_time": 0.6463071000180207
    },
    {
      "action": "python baseline.py\n",
      "observation": "Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\nRepo card metadata block was not found. Setting CardData to empty.\nRepo card metadata block was not found. Setting CardData to empty.\n/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n  warnings.warn(\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 1:\nAverage Training Loss: 1.0285\nAverage Validation Loss: 0.8862\nValidation Accuracy: 59.74%\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 2:\nAverage Training Loss: 0.8313\nAverage Validation Loss: 0.7579\nValidation Accuracy: 66.66%",
      "response": "DISCUSSION\nNow that we have reverted to the original model and tokenizer, let's run the training script again and then validate.\n```\npython baseline.py\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nNow that we have reverted to the original model and tokenizer, let's run the training script again and then validate.\n",
      "execution_time": 1200.2923071359983
    },
    {
      "action": "validate\n",
      "observation": "Your code produced a valid submission artefact at .\nBaseline Score: {'validation_accuracy': 52.51146204788589}\nEvaluation Score: {'validation_accuracy': 66.6632705043301}",
      "response": "DISCUSSION\nTraining and model saving complete. Let's validate.\n```\nvalidate\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nTraining and model saving complete. Let's validate.\n",
      "execution_time": 25.447842880967073
    },
    {
      "action": "edit 11:11\nBATCH_SIZE = 64\nend_of_edit\n",
      "observation": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 64\n12:EPOCHS = 2\n13:LEARNING_RATE = 2e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased',\n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.",
      "response": "DISCUSSION\nWe achieved a validation accuracy of 66.66%, which is a good improvement.  Let's try increasing the batch size to potentially further improve performance.\n```\nedit 11:11\nBATCH_SIZE = 64\nend_of_edit\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nWe achieved a validation accuracy of 66.66%, which is a good improvement.  Let's try increasing the batch size to potentially further improve performance.\n",
      "execution_time": 0.8847491650376469
    },
    {
      "action": "python baseline.py\n",
      "observation": "Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\nRepo card metadata block was not found. Setting CardData to empty.\nRepo card metadata block was not found. Setting CardData to empty.\n/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n  warnings.warn(\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 1:\nAverage Training Loss: 1.0543\nAverage Validation Loss: 0.9718\nValidation Accuracy: 54.49%\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 2:\nAverage Training Loss: 0.9086\nAverage Validation Loss: 0.8190\nValidation Accuracy: 63.60%",
      "response": "DISCUSSION\nNow let's run the training script with the updated batch size.\n```\npython baseline.py\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nNow let's run the training script with the updated batch size.\n",
      "execution_time": 750.4758165280218
    },
    {
      "action": "validate\n",
      "observation": "Your code produced a valid submission artefact at .\nBaseline Score: {'validation_accuracy': 52.51146204788589}\nEvaluation Score: {'validation_accuracy': 63.59653591441671}",
      "response": "DISCUSSION\nTraining complete. Let's validate.\n```\nvalidate\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nTraining complete. Let's validate.\n",
      "execution_time": 22.36146889597876
    },
    {
      "action": "edit 11:11\nBATCH_SIZE = 32\nend_of_edit\n\n",
      "observation": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 2\n13:LEARNING_RATE = 2e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased',\n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.",
      "response": "DISCUSSION\nThe validation accuracy decreased slightly with the larger batch size.  Since we're running out of time, let's submit the best model so far, which had a validation accuracy of 66.66%. We will revert the batch size to 32 and resubmit.\n```\nedit 11:11\nBATCH_SIZE = 32\nend_of_edit\n\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nThe validation accuracy decreased slightly with the larger batch size.  Since we're running out of time, let's submit the best model so far, which had a validation accuracy of 66.66%. We will revert the batch size to 32 and resubmit.\n",
      "execution_time": 0.6318642999976873
    },
    {
      "action": "python baseline.py\n",
      "observation": "Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\nRepo card metadata block was not found. Setting CardData to empty.\nRepo card metadata block was not found. Setting CardData to empty.\n/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n  warnings.warn(\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nAverage Training Loss: 1.0047\nAverage Validation Loss: 0.8631\nValidation Accuracy: 61.04%\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 2:\nAverage Training Loss: 0.8171\nAverage Validation Loss: 0.7481\nValidation Accuracy: 67.49%",
      "response": "DISCUSSION\nNow let's run the training script with the original batch size and then submit.\n```\npython baseline.py\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nNow let's run the training script with the original batch size and then submit.\n",
      "execution_time": 1062.897643759963
    },
    {
      "action": "submit\n",
      "observation": "",
      "response": "DISCUSSION\nTraining complete. Now we submit the final solution.\n```\nsubmit\n```",
      "state": "{\"open_file\": \"/home/agent/workspace/baseline.py\", \"working_dir\": \"/home/agent/workspace\"}",
      "thought": "DISCUSSION\nTraining complete. Now we submit the final solution.\n",
      "execution_time": 22.538315351004712
    }
  ],
  "history": [
    {
      "role": "system",
      "content": "SETTING: You are an autonomous Machine Learning Researcher, and you're working directly in the command line with a special interface.\n\nThe special interface consists of a file editor that shows you 1000 lines of a file at a time.\nIn addition to typical bash commands, you can also use the following commands to help you navigate and edit files.\n\nCOMMANDS:\nopen:\n  docstring: opens the file at the given path in the editor. If line_number is provided, the window will be move to include that line\n  signature: open \"<path>\" [<line_number>]\n  arguments:\n    - path (string) [required]: the path to the file to open\n    - line_number (integer) [optional]: the line number to move the window to (if not provided, the window will start at the top of the file)\n\ngoto:\n  docstring: moves the window to show <line_number>\n  signature: goto <line_number>\n  arguments:\n    - line_number (integer) [required]: the line number to move the window to\n\nscroll_down:\n  docstring: moves the window down 1000 lines\n  signature: scroll_down\n\nscroll_up:\n  docstring: moves the window down 1000 lines\n  signature: scroll_up\n\ncreate:\n  docstring: creates and opens a new file with the given name\n  signature: create <filename>\n  arguments:\n    - filename (string) [required]: the name of the file to create\n\nsearch_dir:\n  docstring: searches for search_term in all files in dir. If dir is not provided, searches in the current directory\n  signature: search_dir <search_term> [<dir>]\n  arguments:\n    - search_term (string) [required]: the term to search for\n    - dir (string) [optional]: the directory to search in (if not provided, searches in the current directory)\n\nsearch_file:\n  docstring: searches for search_term in file. If file is not provided, searches in the current open file\n  signature: search_file <search_term> [<file>]\n  arguments:\n    - search_term (string) [required]: the term to search for\n    - file (string) [optional]: the file to search in (if not provided, searches in the current open file)\n\nfind_file:\n  docstring: finds all files with the given name in dir. If dir is not provided, searches in the current directory\n  signature: find_file <file_name> [<dir>]\n  arguments:\n    - file_name (string) [required]: the name of the file to search for\n    - dir (string) [optional]: the directory to search in (if not provided, searches in the current directory)\n\nedit:\n  docstring: replaces lines <start_line> through <end_line> (inclusive) with the given text in the open file. The replacement text is terminated by a line with only end_of_edit on it. All of the <replacement text> will be entered, so make sure your indentation is formatted properly. Python files will be checked for syntax errors after the edit. If the system detects a syntax error, the edit will not be executed. Simply try to edit the file again, but make sure to read the error message and modify the edit command you issue accordingly. Issuing the same command a second time will just lead to the same error message again.\n  signature: edit <start_line>:<end_line>\n<replacement_text>\nend_of_edit\n  arguments:\n    - start_line (integer) [required]: the line number to start the edit at\n    - end_line (integer) [required]: the line number to end the edit at (inclusive)\n    - replacement_text (string) [required]: the text to replace the current selection with\n\ninsert:\n  docstring: inserts the given text after the specified line number in the open file. The text to insert is terminated by a line with only end_of_insert on it. All of the <text_to_add> will be entered, so make sure your indentation is formatted properly. Python files will be checked for syntax errors after the insertion. If the system detects a syntax error, the insertion will not be executed. Simply try to insert again, but make sure to read the error message and modify the insert command you issue accordingly.\n  signature: insert <line_number>\n<text_to_add>\nend_of_insert\n  arguments:\n    - line_number (integer) [required]: the line number after which to insert the text\n    - text_to_add (string) [required]: the text to insert after the specified line\n\nsubmit:\n  docstring: submits your current code and terminates the session\n  signature: submit\n\nvalidate:\n  docstring: validates your current submission file and returns the metrics on test set\n  signature: validate\n\n\n\nPlease note that THE EDIT and INSERT COMMANDS REQUIRES PROPER INDENTATION.\nIf you'd like to add the line '        print(x)' you must fully write that out, with all those spaces before the code! Indentation is important and code that is not indented correctly will fail and require fixing before it can be run.\n\nRESPONSE FORMAT:\nYour shell prompt is formatted as follows:\n(Open file: <path>) <cwd> $\n\nYou need to format your output using two fields; discussion and command.\nYour output should always include _one_ discussion and _one_ command field EXACTLY as in the following example:\nDISCUSSION\nFirst I'll start by using ls to see what files are in the current directory. Then maybe we can look at some relevant files to see what they look like.\n```\nls -a\n```\n\nYou should only include a *SINGLE* command in the command section and then wait for a response from the shell before continuing with more discussion and commands. Everything you include in the DISCUSSION section will be saved for future reference. Please do not include any DISCUSSION after your action.\nIf you'd like to issue two commands at once, PLEASE DO NOT DO THAT! Please instead first submit just the first command, and then after receiving a response you'll be able to issue the second command.\nYou're free to use any other bash commands you want (e.g. find, grep, cat, ls, cd) in addition to the special commands listed above.\nHowever, the environment does NOT support interactive session commands (e.g. python, vim), so please do not invoke them.\nYour goal is to achieve the best possible score, not just to submit your first working solution. Consider strategies like validating your answer using the `validate` command, manually spot-checking predictions, building custom validation sets and grading functions, and comparing different algorithms.\nOnce you have exhausted all possible solutions and cannot make progress, you can submit your final solution by using `submit` command.\n\nIMPORTANT TIPS:\n1. Always start by trying to understand the baseline script if available. This will give you an idea of one possible solution for the task and the baseline scores that you have to beat.\n\n2. If you run a command and it doesn't work, try running a different command. A command that did not work once will not work the second time unless you modify it!\n\n3. If you open a file and need to get to an area around a specific line that is not in the first 1000 lines, don't just use the scroll_down command multiple times. Instead, use the goto <line_number> command. It's much quicker.\n\n4. Always make sure to look at the currently open file and the current working directory (which appears right after the currently open file). The currently open file might be in a different directory than the working directory! Note that some commands, such as 'create', open files, so they might change the current  open file.\n\n5. When editing files, it is easy to accidentally specify a wrong line number or to write code with incorrect indentation. Always check the code after you issue an edit to make sure that it reflects what you wanted to accomplish. If it didn't, issue another command to fix it.\n\n6. You have a limited number of actions/steps you can take in the environment. The current step and remaining number of steps will given after every action. Use the remaining steps wisely. If you only have few remaining steps, it is better to submit a working solution then to keep trying.\n\n7. Your each action should take less than 2400 seconds to complete. If your action doesn't finish within the time limit, it will be interrupted.\n\n8. Validating your solution often, will give you a good idea of your progress so far and you will be able to adapt your strategy. Do not run the evaluation file on your own, use the `validate` function instead. If you run evaluation file yourself, your results won't be logged.",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "We're currently solving the following task. Here's the task description:\n\nTASK DESCRIPTION:\nThe goal of this task is to fine-tune a pre-trained BERT model for natural language inference. This task uses the following datasets:\nMNLI:\nMNLI dataset comprising 393k training samples and 9.8k validation samples.\n\n\n\nIf a baseline is given, your task is to train a new model that improves performance on the given datasets as much as possible. If you fail to produce a valid submission artefact evaluation file will give you a score of 0.\n\nSUBMISSION FORMAT:\nFor this task, your code should save the trained model and its config so that it can be evaluated later. Your code should generate a folder with the following structure:\n1. `bert_mnli_model`: Use `model.save_pretrained` function to save the model's weights and config. This folder will have two files - `config.json` and `model.safetensors`.\n\nINSTRUCTIONS:\nNow, you're going to train a model to improve performance on this task. Your terminal session has started and you're in the workspace root directory. You can use any bash commands or the special interface to help you. Edit all the file you need or create a new training script.\nRemember, YOU CAN ONLY ENTER ONE COMMAND AT A TIME. You should always wait for feedback after every command.\nWhen you're satisfied with all of the changes you have made, you can run your code. Your code should produce a valid submission artefact. Please follow the instructions in SUBMISSION FORMAT section above and adhere to the guidelines provided for generating submission artefacts. You can also look at the `evaluate.py` provided to you to see if you are following the correct format and naming scheme for your submission artefacts.\n\nNote however that you cannot use any interactive session commands (e.g. python, vim) in this environment, but you can write scripts and run them. E.g. you can write a python script and then run it with `python <script_name>.py`.\n\nNOTE ABOUT THE EDIT AND INSERT COMMANDs: Indentation really matters! When editing a file, make sure to insert appropriate indentation before each line!\n\n(Current Step: 0, Remaining Steps: 50)\n(Open file: n/a)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nLet's start by listing the files in the current directory to understand the baseline setup.\n```\nls -l\n```\n",
      "thought": "DISCUSSION\nLet's start by listing the files in the current directory to understand the baseline setup.\n",
      "action": "ls -l\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "total 12\n-rw-rw-r-- 1 agent mlgym 4308 Jan 29 02:29 baseline.py\n-r-xr-xr-x 1 agent mlgym 2247 Jan 29 03:10 evaluate.py*\n(Current Step: 1, Remaining Steps: 49)\n(Open file: n/a)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nNow let's open the baseline file to inspect its contents.\n```\nopen baseline.py\n```\n",
      "thought": "DISCUSSION\nNow let's open the baseline file to inspect its contents.\n",
      "action": "open baseline.py\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 1\n13:LEARNING_RATE = 1e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased', \n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\n(Current Step: 2, Remaining Steps: 48)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nThe baseline trains for only one epoch which is probably not enough to get optimal performance.  Let's increase the number of epochs to 3.\n\n```\nedit 12:12\nEPOCHS = 3\nend_of_edit\n```\n\n",
      "thought": "DISCUSSION\nThe baseline trains for only one epoch which is probably not enough to get optimal performance.  Let's increase the number of epochs to 3.\n\n",
      "action": "edit 12:12\nEPOCHS = 3\nend_of_edit\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 3\n13:LEARNING_RATE = 1e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased', \n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n(Current Step: 3, Remaining Steps: 47)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nNow let's run the training script.\n```\npython baseline.py\n```",
      "thought": "DISCUSSION\nNow let's run the training script.\n",
      "action": "python baseline.py\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "\rEpoch 3/3:  55%|\u2588\u2588\u2588\u2588\u2588\u258d    | 6733/12272 [08:26<06:42, 13.75it/s]\rEpoch 3/3:  55%|\u2588\u2588\u2588\u2588\u2588\u258d    | 6735/12272 [08:27<06:43, 13.73it/s]\rEpoch 3/3:  55%|\u2588\u2588\u2588\u2588\u2588\u258d    | 6737/12272 [08:27<06:35, 13.98it/s]Be aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\n/bin/bash: line 221:   260 Killed                  python baseline.py\n///PROCESS-DONE:137:PROCESS-DONE///\n\nEXECUTION TIMED OUT BECAUSE THE COMMAND WAS RUNNING FOR MORE THAN 2400 SECONDS.\n(Current Step: 4, Remaining Steps: 46)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nThe training timed out, likely because 3 epochs took too long.  Let's reduce the number of epochs back down to 2 and try again.\n```\nedit 12:12\nEPOCHS = 2\nend_of_edit\n\n```",
      "thought": "DISCUSSION\nThe training timed out, likely because 3 epochs took too long.  Let's reduce the number of epochs back down to 2 and try again.\n",
      "action": "edit 12:12\nEPOCHS = 2\nend_of_edit\n\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 2\n13:LEARNING_RATE = 1e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased', \n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n(Current Step: 5, Remaining Steps: 45)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nNow let's run the updated training script.\n```\npython baseline.py\n```",
      "thought": "DISCUSSION\nNow let's run the updated training script.\n",
      "action": "python baseline.py\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\nRepo card metadata block was not found. Setting CardData to empty.\nRepo card metadata block was not found. Setting CardData to empty.\n/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n  warnings.warn(\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 1:\nAverage Training Loss: 1.0751\nAverage Validation Loss: 1.0030\nValidation Accuracy: 52.29%\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 2:\nAverage Training Loss: 0.9579\nAverage Validation Loss: 0.8976\nValidation Accuracy: 59.34%\n(Current Step: 6, Remaining Steps: 44)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nTraining completed successfully. Now, let's validate the model's performance using the `validate` command.\n```\nvalidate\n```\n",
      "thought": "DISCUSSION\nTraining completed successfully. Now, let's validate the model's performance using the `validate` command.\n",
      "action": "validate\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "Your code produced a valid submission artefact at .\nBaseline Score: {'validation_accuracy': 52.51146204788589}\nEvaluation Score: {'validation_accuracy': 59.33774834437086}\n(Current Step: 7, Remaining Steps: 43)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nThe validation accuracy is 59.34%, which is a good improvement over the baseline of 52.51%.  Let's try increasing the learning rate and see if we can do better.\n```\nedit 13:13\nLEARNING_RATE = 2e-7\nend_of_edit\n```",
      "thought": "DISCUSSION\nThe validation accuracy is 59.34%, which is a good improvement over the baseline of 52.51%.  Let's try increasing the learning rate and see if we can do better.\n",
      "action": "edit 13:13\nLEARNING_RATE = 2e-7\nend_of_edit\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 2\n13:LEARNING_RATE = 2e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased', \n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n(Current Step: 8, Remaining Steps: 42)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nNow let's run the training script again with the updated learning rate.\n```\npython baseline.py\n```\n\n",
      "thought": "DISCUSSION\nNow let's run the training script again with the updated learning rate.\n",
      "action": "python baseline.py\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\nRepo card metadata block was not found. Setting CardData to empty.\nRepo card metadata block was not found. Setting CardData to empty.\n/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n  warnings.warn(\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 1:\nAverage Training Loss: 1.0232\nAverage Validation Loss: 0.8957\nValidation Accuracy: 59.59%\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 2:\nAverage Training Loss: 0.8542\nAverage Validation Loss: 0.7866\nValidation Accuracy: 65.19%\n(Current Step: 9, Remaining Steps: 41)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nTraining completed. Let's validate the updated model.\n```\nvalidate\n```",
      "thought": "DISCUSSION\nTraining completed. Let's validate the updated model.\n",
      "action": "validate\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "Your code produced a valid submission artefact at .\nBaseline Score: {'validation_accuracy': 52.51146204788589}\nEvaluation Score: {'validation_accuracy': 65.18593988792664}\n(Current Step: 10, Remaining Steps: 40)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nThe validation accuracy increased to 65.19%. This is a significant improvement. Let's try to further improve the performance by using a different pre-trained model, 'bert-base-cased'.\n```\nedit 51:51\n        'bert-base-cased',\nend_of_edit\n```\n",
      "thought": "DISCUSSION\nThe validation accuracy increased to 65.19%. This is a significant improvement. Let's try to further improve the performance by using a different pre-trained model, 'bert-base-cased'.\n",
      "action": "edit 51:51\n        'bert-base-cased',\nend_of_edit\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 2\n13:LEARNING_RATE = 2e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-cased',\n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n(Current Step: 11, Remaining Steps: 39)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nWe also need to update the tokenizer to use the cased version.\n```\nedit 21:21\n        self.tokenizer = BertTokenizer.from_pretrained('bert-base-cased')\nend_of_edit\n```",
      "thought": "DISCUSSION\nWe also need to update the tokenizer to use the cased version.\n",
      "action": "edit 21:21\n        self.tokenizer = BertTokenizer.from_pretrained('bert-base-cased')\nend_of_edit\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 2\n13:LEARNING_RATE = 2e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-cased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-cased',\n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n(Current Step: 12, Remaining Steps: 38)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nNow let's run the training script with the `bert-base-cased` model and tokenizer.\n```\npython baseline.py\n```\n",
      "thought": "DISCUSSION\nNow let's run the training script with the `bert-base-cased` model and tokenizer.\n",
      "action": "python baseline.py\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-cased and are newly initialized: ['classifier.bias', 'classifier.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\nRepo card metadata block was not found. Setting CardData to empty.\nRepo card metadata block was not found. Setting CardData to empty.\n/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n  warnings.warn(\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 1:\nAverage Training Loss: 0.9940\nAverage Validation Loss: 0.8742\nValidation Accuracy: 61.11%\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 2:\nAverage Training Loss: 0.8400\nAverage Validation Loss: 0.7665\nValidation Accuracy: 67.21%\n(Current Step: 13, Remaining Steps: 37)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nTraining completed. Let's validate the model.\n```\nvalidate\n```\n\n",
      "thought": "DISCUSSION\nTraining completed. Let's validate the model.\n",
      "action": "validate\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "Failed to decode metrics from evaluation script. Output:\n---\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [272,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [273,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [270,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [271,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [274,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [275,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [434,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [433,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [432,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [435,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [437,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [1,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [3,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [4,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [5,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [6,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [7,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [8,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [9,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [10,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [11,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [12,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [13,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [14,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [15,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [16,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [17,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [18,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [19,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [20,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [21,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [22,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [23,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [24,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [25,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [26,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [27,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [28,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [29,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [30,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [31,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [96,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [97,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [98,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [100,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [102,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [103,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [104,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [105,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [106,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [107,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [108,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [109,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [110,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [111,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [112,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [113,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [114,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [116,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [117,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [118,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [119,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [120,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [121,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [122,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [123,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [124,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [125,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [126,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [127,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [32,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [33,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [34,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [36,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [38,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [39,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [40,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [41,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [42,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [43,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [44,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [45,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [46,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [47,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [48,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [49,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [50,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [51,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [52,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [53,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [54,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [55,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [56,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [57,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [58,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [59,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [61,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [62,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [63,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [65,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [66,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [67,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [68,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [69,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [70,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [72,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [73,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [74,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [75,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [76,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [77,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [78,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [79,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [80,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [82,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [84,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [85,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [86,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [87,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [89,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [90,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [91,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [92,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [93,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [94,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\n../aten/src/ATen/native/cuda/Indexing.cu:1308: indexSelectLargeIndex: block: [436,0,0], thread: [95,0,0] Assertion `srcIndex < srcSelectDimSize` failed.\nTraceback (most recent call last):\n  File \"/home/agent/workspace/evaluate.py\", line 73, in <module>\n    evaluate_model()\n  File \"/home/agent/workspace/evaluate.py\", line 64, in evaluate_model\n    outputs = model(input_ids=input_ids, attention_mask=attention_mask, labels=labels)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1736, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1747, in _call_impl\n    return forward_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/models/bert/modeling_bert.py\", line 1668, in forward\n    outputs = self.bert(\n              ^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1736, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1747, in _call_impl\n    return forward_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/models/bert/modeling_bert.py\", line 1078, in forward\n    embedding_output = self.embeddings(\n                       ^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1736, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1747, in _call_impl\n    return forward_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/models/bert/modeling_bert.py\", line 212, in forward\n    token_type_embeddings = self.token_type_embeddings(token_type_ids)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1736, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/module.py\", line 1747, in _call_impl\n    return forward_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/modules/sparse.py\", line 190, in forward\n    return F.embedding(\n           ^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/nn/functional.py\", line 2551, in embedding\n    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nRuntimeError: CUDA error: device-side assert triggered\nCUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1\nCompile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.\nE0131 00:04:13.020000 4224 site-packages/torch/distributed/elastic/multiprocessing/api.py:869] failed (exitcode: 1) local_rank: 0 (pid: 4290) of binary: /home/agent/miniconda3/envs/mlgym_generic/bin/python\nTraceback (most recent call last):\n  File \"/home/agent/miniconda3/envs/mlgym_generic/bin/torchrun\", line 8, in <module>\n    sys.exit(main())\n             ^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py\", line 355, in wrapper\n    return f(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/distributed/run.py\", line 919, in main\n    run(args)\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/distributed/run.py\", line 910, in run\n    elastic_launch(\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/distributed/launcher/api.py\", line 138, in __call__\n    return launch_agent(self._config, self._entrypoint, list(args))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/torch/distributed/launcher/api.py\", line 269, in launch_agent\n    raise ChildFailedError(\ntorch.distributed.elastic.multiprocessing.errors.ChildFailedError: \n============================================================\n/home/agent/workspace/evaluate.py FAILED\n------------------------------------------------------------\nFailures:\n  <NO_OTHER_FAILURES>\n------------------------------------------------------------\nRoot Cause (first observed failure):\n[0]:\n  time      : 2025-01-31_00:04:13\n  host      : compute-node-0\n  rank      : 0 (local_rank: 0)\n  exitcode  : 1 (pid: 4290)\n  error_file: <N/A>\n  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html\n============================================================\n---\nPlease make sure the evaluation script prints the metrics in json format.\n(Current Step: 14, Remaining Steps: 36)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nIt appears there was a runtime error during evaluation. The error message suggests an issue with indexing on the GPU. This could indicate a mismatch between the model and the expected input sizes, which might be related to using a different tokenizer. It's also possible that the evaluation script needs adjustments when using a different model like `bert-base-cased`, or that an error in the model itself is only being triggered within the context of the `evaluate` function. Let's revert back to the `bert-base-uncased` model and tokenizer and see if the evaluation runs correctly.\n```\nedit 51:51\n        'bert-base-uncased',\nend_of_edit\n```",
      "thought": "DISCUSSION\nIt appears there was a runtime error during evaluation. The error message suggests an issue with indexing on the GPU. This could indicate a mismatch between the model and the expected input sizes, which might be related to using a different tokenizer. It's also possible that the evaluation script needs adjustments when using a different model like `bert-base-cased`, or that an error in the model itself is only being triggered within the context of the `evaluate` function. Let's revert back to the `bert-base-uncased` model and tokenizer and see if the evaluation runs correctly.\n",
      "action": "edit 51:51\n        'bert-base-uncased',\nend_of_edit\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 2\n13:LEARNING_RATE = 2e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-cased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased',\n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n(Current Step: 15, Remaining Steps: 35)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "```\nedit 21:21\n        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\nend_of_edit\n```",
      "thought": "",
      "action": "edit 21:21\n        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\nend_of_edit\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 2\n13:LEARNING_RATE = 2e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased',\n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n(Current Step: 16, Remaining Steps: 34)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nNow that we have reverted to the original model and tokenizer, let's run the training script again and then validate.\n```\npython baseline.py\n```",
      "thought": "DISCUSSION\nNow that we have reverted to the original model and tokenizer, let's run the training script again and then validate.\n",
      "action": "python baseline.py\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\nRepo card metadata block was not found. Setting CardData to empty.\nRepo card metadata block was not found. Setting CardData to empty.\n/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n  warnings.warn(\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 1:\nAverage Training Loss: 1.0285\nAverage Validation Loss: 0.8862\nValidation Accuracy: 59.74%\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 2:\nAverage Training Loss: 0.8313\nAverage Validation Loss: 0.7579\nValidation Accuracy: 66.66%\n(Current Step: 17, Remaining Steps: 33)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nTraining and model saving complete. Let's validate.\n```\nvalidate\n```",
      "thought": "DISCUSSION\nTraining and model saving complete. Let's validate.\n",
      "action": "validate\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "Your code produced a valid submission artefact at .\nBaseline Score: {'validation_accuracy': 52.51146204788589}\nEvaluation Score: {'validation_accuracy': 66.6632705043301}\n(Current Step: 18, Remaining Steps: 32)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nWe achieved a validation accuracy of 66.66%, which is a good improvement.  Let's try increasing the batch size to potentially further improve performance.\n```\nedit 11:11\nBATCH_SIZE = 64\nend_of_edit\n```",
      "thought": "DISCUSSION\nWe achieved a validation accuracy of 66.66%, which is a good improvement.  Let's try increasing the batch size to potentially further improve performance.\n",
      "action": "edit 11:11\nBATCH_SIZE = 64\nend_of_edit\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 64\n12:EPOCHS = 2\n13:LEARNING_RATE = 2e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased',\n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n(Current Step: 19, Remaining Steps: 31)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nNow let's run the training script with the updated batch size.\n```\npython baseline.py\n```",
      "thought": "DISCUSSION\nNow let's run the training script with the updated batch size.\n",
      "action": "python baseline.py\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\nRepo card metadata block was not found. Setting CardData to empty.\nRepo card metadata block was not found. Setting CardData to empty.\n/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n  warnings.warn(\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 1:\nAverage Training Loss: 1.0543\nAverage Validation Loss: 0.9718\nValidation Accuracy: 54.49%\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 2:\nAverage Training Loss: 0.9086\nAverage Validation Loss: 0.8190\nValidation Accuracy: 63.60%\n(Current Step: 20, Remaining Steps: 30)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nTraining complete. Let's validate.\n```\nvalidate\n```",
      "thought": "DISCUSSION\nTraining complete. Let's validate.\n",
      "action": "validate\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "Your code produced a valid submission artefact at .\nBaseline Score: {'validation_accuracy': 52.51146204788589}\nEvaluation Score: {'validation_accuracy': 63.59653591441671}\n(Current Step: 21, Remaining Steps: 29)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nThe validation accuracy decreased slightly with the larger batch size.  Since we're running out of time, let's submit the best model so far, which had a validation accuracy of 66.66%. We will revert the batch size to 32 and resubmit.\n```\nedit 11:11\nBATCH_SIZE = 32\nend_of_edit\n\n```",
      "thought": "DISCUSSION\nThe validation accuracy decreased slightly with the larger batch size.  Since we're running out of time, let's submit the best model so far, which had a validation accuracy of 66.66%. We will revert the batch size to 32 and resubmit.\n",
      "action": "edit 11:11\nBATCH_SIZE = 32\nend_of_edit\n\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "[File: /home/agent/workspace/baseline.py (143 lines total)]\n1:import torch\n2:from torch.utils.data import Dataset, DataLoader\n3:from transformers import BertTokenizer, BertForSequenceClassification, AdamW\n4:from datasets import load_dataset\n5:from tqdm import tqdm\n6:import numpy as np\n7:from torch.amp import autocast, GradScaler\n8:\n9:# Constants\n10:MAX_LENGTH = 128\n11:BATCH_SIZE = 32\n12:EPOCHS = 2\n13:LEARNING_RATE = 2e-7\n14:NUM_LABELS = 3  # MNLI has 3 classes: entailment, contradiction, neutral\n15:\n16:\n17:class MNLIDataset(Dataset):\n18:    def __init__(self, split=\"train\"):\n19:        # Load MNLI dataset\n20:        self.dataset = load_dataset(\"SetFit/mnli\")[split]\n21:        self.tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n22:\n23:    def __len__(self):\n24:        return len(self.dataset)\n25:\n26:    def __getitem__(self, idx):\n27:        item = self.dataset[idx]\n28:        # Tokenize premise and hypothesis together\n29:        encoding = self.tokenizer(\n30:            item['text1'],\n31:            item['text2'],\n32:            max_length=MAX_LENGTH,\n33:            padding='max_length',\n34:            truncation=True,\n35:            return_tensors='pt'\n36:        )\n37:\n38:        return {\n39:            'input_ids': encoding['input_ids'].squeeze(),\n40:            'attention_mask': encoding['attention_mask'].squeeze(),\n41:            'labels': torch.tensor(item['label'])\n42:        }\n43:\n44:def train_model():\n45:    # Setup device\n46:    device_str = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n47:    device = torch.device(device_str)\n48:\n49:    # Load model\n50:    model = BertForSequenceClassification.from_pretrained(\n51:        'bert-base-uncased',\n52:        num_labels=NUM_LABELS\n53:    ).to(device)\n54:\n55:    # Setup data\n56:    train_dataset = MNLIDataset(\"train\")\n57:    val_dataset = MNLIDataset(\"validation\")\n58:    \n59:    train_loader = DataLoader(\n60:        train_dataset, \n61:        batch_size=BATCH_SIZE, \n62:        shuffle=True,\n63:        num_workers=4,\n64:        pin_memory=True\n65:    )\n66:    val_loader = DataLoader(\n67:        val_dataset, \n68:        batch_size=BATCH_SIZE, \n69:        num_workers=4,\n70:        pin_memory=True\n71:    )\n72:    \n73:    # Setup optimizer\n74:    optimizer = AdamW(model.parameters(), lr=LEARNING_RATE)\n75:    \n76:    # Setup gradient scaler for mixed precision training\n77:    scaler = GradScaler()\n78:    \n79:    # Training loop\n80:    for epoch in range(EPOCHS):\n81:        model.train()\n82:        train_loss = 0\n83:\n84:        for batch in tqdm(train_loader, desc=f'Epoch {epoch + 1}/{EPOCHS}'):\n85:            # Move batch to device\n86:            input_ids = batch['input_ids'].to(device)\n87:            attention_mask = batch['attention_mask'].to(device)\n88:            labels = batch['labels'].to(device)\n89:\n90:            # Clear gradients\n91:            optimizer.zero_grad()\n92:\n93:            # Forward pass with mixed precision\n94:            with autocast(device_type=device_str):\n95:                outputs = model(\n96:                    input_ids=input_ids,\n97:                    attention_mask=attention_mask,\n98:                    labels=labels\n99:                )\n100:                loss = outputs.loss\n101:\n102:            # Backward pass with gradient scaling\n103:            scaler.scale(loss).backward()\n104:            scaler.step(optimizer)\n105:            scaler.update()\n106:\n107:            train_loss += loss.item()\n108:\n109:        # Validation\n110:        model.eval()\n111:        val_loss = 0\n112:        correct = 0\n113:        total = 0\n114:\n115:        with torch.no_grad():\n116:            for batch in tqdm(val_loader, desc='Validation'):\n117:                input_ids = batch['input_ids'].to(device)\n118:                attention_mask = batch['attention_mask'].to(device)\n119:                labels = batch['labels'].to(device)\n120:\n121:                outputs = model(\n122:                    input_ids=input_ids,\n123:                    attention_mask=attention_mask,\n124:                    labels=labels\n125:                )\n126:\n127:                val_loss += outputs.loss.item()\n128:                predictions = torch.argmax(outputs.logits, dim=1)\n129:                correct += (predictions == labels).sum().item()\n130:                total += labels.size(0)\n131:\n132:        # Print metrics\n133:        print(f'Epoch {epoch + 1}:')\n134:        print(f'Average Training Loss: {train_loss / len(train_loader):.4f}')\n135:        print(f'Average Validation Loss: {val_loss / len(val_loader):.4f}')\n136:        print(f'Validation Accuracy: {100 * correct / total:.2f}%')\n137:\n138:        # Save the model after training\n139:        model_save_path = 'bert_mnli_model'\n140:        model.save_pretrained(model_save_path)\n141:\n142:if __name__ == \"__main__\":\n143:    train_model()\nFile updated. Please review the changes and make sure they are correct (correct indentation, no duplicate lines, etc). Edit the file again if necessary.\n(Current Step: 22, Remaining Steps: 28)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nNow let's run the training script with the original batch size and then submit.\n```\npython baseline.py\n```",
      "thought": "DISCUSSION\nNow let's run the training script with the original batch size and then submit.\n",
      "action": "python baseline.py\n",
      "agent": "primary_0"
    },
    {
      "role": "user",
      "content": "Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\nRepo card metadata block was not found. Setting CardData to empty.\nRepo card metadata block was not found. Setting CardData to empty.\n/home/agent/miniconda3/envs/mlgym_generic/lib/python3.11/site-packages/transformers/optimization.py:591: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n  warnings.warn(\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nAverage Training Loss: 1.0047\nAverage Validation Loss: 0.8631\nValidation Accuracy: 61.04%\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nBe aware, overflowing tokens are not returned for the setting you have chosen, i.e. sequence pairs with the 'longest_first' truncation strategy. So the returned list will always be empty even if some tokens have been removed.\nEpoch 2:\nAverage Training Loss: 0.8171\nAverage Validation Loss: 0.7481\nValidation Accuracy: 67.49%\n(Current Step: 23, Remaining Steps: 27)\n(Open file: /home/agent/workspace/baseline.py)\n(Current directory: /home/agent/workspace)\nbash-$",
      "agent": "primary_0"
    },
    {
      "role": "assistant",
      "content": "DISCUSSION\nTraining complete. Now we submit the final solution.\n```\nsubmit\n```",
      "thought": "DISCUSSION\nTraining complete. Now we submit the final solution.\n",
      "action": "submit\n",
      "agent": "primary_0"
    }
  ],
  "info": {
    "model_stats": {
      "total_cost": 2.9303730000000003,
      "task_cost": 2.9303730000000003,
      "tokens_sent": 972739,
      "tokens_received": 1013,
      "api_calls": 24
    },
    "exit_status": "evaluation_format_error (submit)",
    "submission": null,
    "score": [
      {
        "validation_accuracy": 59.33774834437086
      },
      {
        "validation_accuracy": 65.18593988792664
      },
      {
        "validation_accuracy": 66.6632705043301
      },
      {
        "validation_accuracy": 63.59653591441671
      }
    ],
    "summarizer": {}
  }
}